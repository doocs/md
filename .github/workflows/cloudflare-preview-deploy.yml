name: Cloudflare Workers Preview

on:
  workflow_run:
    workflows: ["Cloudflare Preview Build"]
    types:
      - completed
  workflow_dispatch:

concurrency:
  group: cloudflare-preview-${{ github.event.workflow_run.pull_requests[0].number }}
  cancel-in-progress: true

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    if: github.repository == 'doocs/md' && github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success'
    permissions:
      actions: read
      contents: read
      deployments: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download PR number
        uses: actions/download-artifact@v4
        with:
          name: cloudflare-pr
          path: .
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Read PR number
        id: read-pr
        run: echo "pr_number=$(cat pr-id.txt)" >> $GITHUB_OUTPUT

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: cloudflare-dist
          path: apps/web/dist
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: 22

      - name: Install Wrangler
        run: npm install -g wrangler@latest

      - name: Prepare wrangler config
        working-directory: apps/web
        run: |
          # Create a temporary wrangler config for preview deployment
          cat > wrangler-preview.json << 'EOF'
          {
            "name": "md-pr-temp",
            "compatibility_date": "2025-09-06",
            "main": "worker/index.ts",
            "assets": {
              "not_found_handling": "single-page-application",
              "directory": "./public/"
            },
            "observability": {
              "enabled": true
            },
            "compatibility_flags": [
              "nodejs_compat",
              "nodejs_compat_populate_process_env"
            ]
          }
          EOF

      - name: Deploy to Cloudflare Workers
        id: deploy
        run: npx wrangler deploy --config wrangler-preview.json --name md-pr-${{ steps.read-pr.outputs.pr_number }}
        working-directory: apps/web
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Get deployment URL
        id: deployment-url
        run: |
          PREVIEW_URL="https://md-pr-${{ steps.read-pr.outputs.pr_number }}.doocs.workers.dev"
          echo "url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $PREVIEW_URL"

      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const previewUrl = '${{ steps.deployment-url.outputs.url }}';
            const prNumber = Number('${{ steps.read-pr.outputs.pr_number }}');

            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Cloudflare Workers Preview')
            );

            const commentBody = `## ðŸš€ Cloudflare Workers Preview

            Your preview is ready!

            **Preview URL:** ${previewUrl}

            <sub>Built with commit ${context.workflow_run.head_sha}</sub>`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: commentBody
              });
            }
